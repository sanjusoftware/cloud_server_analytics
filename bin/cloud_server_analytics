#!/usr/bin/env ruby
# 1.9 adds realpath to resolve symlinks; 1.8 doesn't
# have this method, so we add it so we get resolved symlinks
# and compatibility
unless File.respond_to? :realpath
  class File #:nodoc:
    def self.realpath path
      return realpath(File.readlink(path)) if symlink?(path)
      path
    end
  end
end
$: << File.expand_path(File.dirname(File.realpath(__FILE__)) + '/../lib')
require 'rubygems'
require 'gli'
require 'cloud_server_analytics_version'
require 'cloud_server_analytics'

include GLI

program_desc 'Analytical reporting of Amazon EC2'

version CloudServerAnalytics::VERSION

desc 'Describe some switch here '
switch [:s, :switch]

desc 'Describe some flag here'
default_value 'the default'
arg_name 'The name of the argument'
flag [:f, :flagname]

desc 'Enumerates running Ec2 instances and load them into a database'
arg_name 'load_instances'
command :load_instances do |c|
  c.desc 'Describe a switch to generate_report'
  c.switch :s

  c.desc 'Describe a flag to generate_report'
  c.default_value 'default'
  c.flag :f
  c.action do |global_options, options, args|

    CloudServerAnalytics::AmazonEC2.new.load_instances

  end
end

desc 'Creates the database'
arg_name 'create_db'
command :create_db do |c|
  c.desc 'Describe a switch to generate_report'
  c.switch :s

  c.desc 'Describe a flag to generate_report'
  c.default_value 'default'
  c.flag :f
  c.action do |global_options, options, args|

    Database.create_database

  end
end

pre do |global, command, options, args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global, command, options, args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit GLI.run(ARGV)
